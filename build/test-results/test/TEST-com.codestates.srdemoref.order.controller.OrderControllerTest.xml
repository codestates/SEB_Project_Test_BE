<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.codestates.srdemoref.order.controller.OrderControllerTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2022-07-11T10:59:41" hostname="Hojinui-MacBookAir.local" time="0.441">
  <properties/>
  <testcase name="cancelOrder()" classname="com.codestates.srdemoref.order.controller.OrderControllerTest" time="0.232"/>
  <testcase name="getOrders()" classname="com.codestates.srdemoref.order.controller.OrderControllerTest" time="0.083"/>
  <testcase name="patchOrder()" classname="com.codestates.srdemoref.order.controller.OrderControllerTest" time="0.041"/>
  <testcase name="getOrder()" classname="com.codestates.srdemoref.order.controller.OrderControllerTest" time="0.024"/>
  <testcase name="postOrder()" classname="com.codestates.srdemoref.order.controller.OrderControllerTest" time="0.06"/>
  <system-out><![CDATA[18:59:38.710 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
18:59:38.715 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
18:59:38.732 [Test worker] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [com.codestates.srdemoref.order.controller.OrderControllerTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
18:59:38.736 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.codestates.srdemoref.order.controller.OrderControllerTest], using SpringBootContextLoader
18:59:38.738 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.codestates.srdemoref.order.controller.OrderControllerTest]: class path resource [com/codestates/srdemoref/order/controller/OrderControllerTest-context.xml] does not exist
18:59:38.739 [Test worker] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [com.codestates.srdemoref.order.controller.OrderControllerTest]: class path resource [com/codestates/srdemoref/order/controller/OrderControllerTestContext.groovy] does not exist
18:59:38.739 [Test worker] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [com.codestates.srdemoref.order.controller.OrderControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
18:59:38.739 [Test worker] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [com.codestates.srdemoref.order.controller.OrderControllerTest]: OrderControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
18:59:38.770 [Test worker] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [com.codestates.srdemoref.order.controller.OrderControllerTest]
18:59:38.799 [Test worker] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/Users/hojinjang/Documents/develop/personalproject/sr-demo-ref/build/classes/java/main/com/codestates/srdemoref/SrDemoRefApplication.class]
18:59:38.800 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration com.codestates.srdemoref.SrDemoRefApplication for test class com.codestates.srdemoref.order.controller.OrderControllerTest
18:59:38.842 [Test worker] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [com.codestates.srdemoref.order.controller.OrderControllerTest]: using defaults.
18:59:38.842 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
18:59:38.855 [Test worker] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@3d829787, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@71652c98, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@51bde877, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@60b85ba1, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@492fc69e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@117632cf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2fb68ec6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@d71adc2, org.springframework.test.context.event.EventPublishingTestExecutionListener@3add81c4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1a1d3c1a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1c65121, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@159e366, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@57dc9128, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@24528a25, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@17ae98d7]
18:59:38.859 [Test worker] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5215cd9a testClass = OrderControllerTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b6964d testClass = OrderControllerTest, locations = '{}', classes = '{class com.codestates.srdemoref.SrDemoRefApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@31198ceb key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={com.codestates.srdemoref.restDocUtils.RestDocsConfig.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b04476e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2783717b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5ed731d0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@747f281], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true]], class annotated with @DirtiesContext [false] with mode [null].

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v2.7.1)

2022-07-11 18:59:39.020  INFO 35302 --- [    Test worker] c.c.s.o.controller.OrderControllerTest   : Starting OrderControllerTest using Java 11.0.15 on Hojinui-MacBookAir.local with PID 35302 (started by hojinjang in /Users/hojinjang/Documents/develop/personalproject/sr-demo-ref)
2022-07-11 18:59:39.021  INFO 35302 --- [    Test worker] c.c.s.o.controller.OrderControllerTest   : No active profile set, falling back to 1 default profile: "default"
2022-07-11 18:59:39.441  INFO 35302 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2022-07-11 18:59:39.472  INFO 35302 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26 ms. Found 4 JPA repository interfaces.
2022-07-11 18:59:39.726  INFO 35302 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2022-07-11 18:59:39.751  INFO 35302 --- [    Test worker] org.hibernate.Version                    : HHH000412: Hibernate ORM core version 5.6.9.Final
2022-07-11 18:59:39.843  INFO 35302 --- [    Test worker] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
2022-07-11 18:59:39.894  INFO 35302 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Starting...
2022-07-11 18:59:40.017  INFO 35302 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-1 - Start completed.
2022-07-11 18:59:40.033  INFO 35302 --- [    Test worker] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table if exists coffee CASCADE 
Hibernate: drop table if exists member CASCADE 
Hibernate: drop table if exists order_coffee CASCADE 
Hibernate: drop table if exists orders CASCADE 
Hibernate: drop table if exists review CASCADE 
Hibernate: drop table if exists stamp CASCADE 
Hibernate: create table coffee (coffee_id bigint generated by default as identity, coffee_code varchar(3) not null, coffee_status varchar(20) not null, created_at timestamp not null, eng_name varchar(100) not null, kor_name varchar(100) not null, price integer not null, updated_at timestamp not null, primary key (coffee_id))
Hibernate: create table member (member_id bigint generated by default as identity, created_at timestamp not null, email varchar(255) not null, member_status varchar(20) not null, name varchar(100) not null, phone varchar(13) not null, updated_at timestamp not null, primary key (member_id))
Hibernate: create table order_coffee (order_coffee_id bigint generated by default as identity, quantity integer not null, coffee_id bigint, order_id bigint, primary key (order_coffee_id))
Hibernate: create table orders (order_id bigint generated by default as identity, created_at timestamp not null, order_status varchar(255), updated_at timestamp not null, member_id bigint, primary key (order_id))
Hibernate: create table review (review_id bigint generated by default as identity, content varchar(255) not null, created_at timestamp not null, image varchar(255), title varchar(100) not null, updated_at timestamp not null, member_id bigint, order_id bigint, primary key (review_id))
Hibernate: create table stamp (stamp_id bigint generated by default as identity, created_at timestamp, stamp_count integer, updated_at timestamp, member_id bigint, primary key (stamp_id))
Hibernate: alter table coffee add constraint UK_m12kom436k9e8fhohvqdnfakd unique (coffee_code)
Hibernate: alter table member add constraint UK_mbmcqelty0fbrvxp1q58dn57t unique (email)
Hibernate: alter table member add constraint UK_6ithqvsvrcawbi9dtxu0ttsny unique (phone)
Hibernate: alter table order_coffee add constraint FKaddeel2etjqaqm0n5728r9sab foreign key (coffee_id) references coffee
Hibernate: alter table order_coffee add constraint FKe95q1ho0v6ug022j3yx82e6eq foreign key (order_id) references orders
Hibernate: alter table orders add constraint FKpktxwhj3x9m4gth5ff6bkqgeb foreign key (member_id) references member
Hibernate: alter table review add constraint FKk0ccx5i4ci2wd70vegug074w1 foreign key (member_id) references member
Hibernate: alter table review add constraint FKnkc5s3da46cbx8oeqrfhnm7es foreign key (order_id) references orders
Hibernate: alter table stamp add constraint FK1oscorlxc4ywlhvbucl1j2q9q foreign key (member_id) references member
2022-07-11 18:59:40.435  INFO 35302 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2022-07-11 18:59:40.440  INFO 35302 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2022-07-11 18:59:40.852  WARN 35302 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2022-07-11 18:59:41.046  INFO 35302 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2'. Database available at 'jdbc:h2:mem:test'
2022-07-11 18:59:41.281  INFO 35302 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2022-07-11 18:59:41.282  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-07-11 18:59:41.285  INFO 35302 --- [    Test worker] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint(s) beneath base path '/actuator'
2022-07-11 18:59:41.297  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 15 ms
2022-07-11 18:59:41.314  INFO 35302 --- [    Test worker] c.c.s.o.controller.OrderControllerTest   : Started OrderControllerTest in 2.437 seconds (JVM running for 3.065)
2022-07-11 18:59:41.350  INFO 35302 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5215cd9a testClass = OrderControllerTest, testInstance = com.codestates.srdemoref.order.controller.OrderControllerTest@680408ac, testMethod = cancelOrder@OrderControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b6964d testClass = OrderControllerTest, locations = '{}', classes = '{class com.codestates.srdemoref.SrDemoRefApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@31198ceb key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={com.codestates.srdemoref.restDocUtils.RestDocsConfig.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b04476e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2783717b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5ed731d0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@747f281], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75f9a35a]; rollback [true]
2022-07-11 18:59:41.409  INFO 35302 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2022-07-11 18:59:41.409  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-07-11 18:59:41.410  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: insert into coffee (coffee_id, coffee_code, coffee_status, created_at, eng_name, kor_name, price, updated_at) values (default, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into member (member_id, created_at, email, member_status, name, phone, updated_at) values (default, ?, ?, ?, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)

MockHttpServletRequest:
      HTTP Method = DELETE
      Request URI = /orders/1
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.codestates.srdemoref.order.controller.OrderController
           Method = com.codestates.srdemoref.order.controller.OrderController#cancelOrder(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 204
    Error message = null
          Headers = []
     Content type = null
             Body = 
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: update orders set created_at=?, member_id=?, order_status=?, updated_at=? where order_id=?
Hibernate: select orderentit0_.order_id as order_id1_3_, orderentit0_.created_at as created_2_3_, orderentit0_.member_id as member_i5_3_, orderentit0_.order_status as order_st3_3_, orderentit0_.updated_at as updated_4_3_ from orders orderentit0_
Hibernate: select memberenti0_.member_id as member_i1_1_, memberenti0_.created_at as created_2_1_, memberenti0_.email as email3_1_, memberenti0_.member_status as member_s4_1_, memberenti0_.name as name5_1_, memberenti0_.phone as phone6_1_, memberenti0_.updated_at as updated_7_1_ from member memberenti0_
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from member where member_id=?
Hibernate: delete from coffee where coffee_id=?
2022-07-11 18:59:41.574  INFO 35302 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5215cd9a testClass = OrderControllerTest, testInstance = com.codestates.srdemoref.order.controller.OrderControllerTest@680408ac, testMethod = cancelOrder@OrderControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b6964d testClass = OrderControllerTest, locations = '{}', classes = '{class com.codestates.srdemoref.SrDemoRefApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@31198ceb key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={com.codestates.srdemoref.restDocUtils.RestDocsConfig.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b04476e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2783717b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5ed731d0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@747f281], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-07-11 18:59:41.577  INFO 35302 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5215cd9a testClass = OrderControllerTest, testInstance = com.codestates.srdemoref.order.controller.OrderControllerTest@420d123d, testMethod = getOrders@OrderControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b6964d testClass = OrderControllerTest, locations = '{}', classes = '{class com.codestates.srdemoref.SrDemoRefApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@31198ceb key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={com.codestates.srdemoref.restDocUtils.RestDocsConfig.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b04476e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2783717b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5ed731d0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@747f281], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75f9a35a]; rollback [true]
2022-07-11 18:59:41.578  INFO 35302 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2022-07-11 18:59:41.578  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-07-11 18:59:41.579  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: insert into coffee (coffee_id, coffee_code, coffee_status, created_at, eng_name, kor_name, price, updated_at) values (default, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into member (member_id, created_at, email, member_status, name, phone, updated_at) values (default, ?, ?, ?, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: select orderentit0_.order_id as order_id1_3_, orderentit0_.created_at as created_2_3_, orderentit0_.member_id as member_i5_3_, orderentit0_.order_status as order_st3_3_, orderentit0_.updated_at as updated_4_3_ from orders orderentit0_ order by orderentit0_.order_id desc limit ?
Hibernate: select count(orderentit0_.order_id) as col_0_0_ from orders orderentit0_
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_ where coffeeenti0_.coffee_id=?
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_ where coffeeenti0_.coffee_id=?
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_ where coffeeenti0_.coffee_id=?
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_ where coffeeenti0_.coffee_id=?
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_ where coffeeenti0_.coffee_id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /orders
       Parameters = {size=[5], page=[1]}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.codestates.srdemoref.order.controller.OrderController
           Method = com.codestates.srdemoref.order.controller.OrderController#getOrders(int, int)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"data":[{"orderId":11,"memberId":2,"orderStatus":"ORDER_REQUEST","orderCoffees":[{"coffeeId":2,"korName":"아메리카노4","engName":"Americano","price":2500,"quantity":3}],"createdAt":"2022-07-11T18:59:41.586142"},{"orderId":10,"memberId":2,"orderStatus":"ORDER_REQUEST","orderCoffees":[{"coffeeId":2,"korName":"아메리카노4","engName":"Americano","price":2500,"quantity":3}],"createdAt":"2022-07-11T18:59:41.585461"},{"orderId":9,"memberId":2,"orderStatus":"ORDER_REQUEST","orderCoffees":[{"coffeeId":2,"korName":"아메리카노4","engName":"Americano","price":2500,"quantity":3}],"createdAt":"2022-07-11T18:59:41.584856"},{"orderId":8,"memberId":2,"orderStatus":"ORDER_REQUEST","orderCoffees":[{"coffeeId":2,"korName":"아메리카노4","engName":"Americano","price":2500,"quantity":3}],"createdAt":"2022-07-11T18:59:41.584329"},{"orderId":7,"memberId":2,"orderStatus":"ORDER_REQUEST","orderCoffees":[{"coffeeId":2,"korName":"아메리카노4","engName":"Americano","price":2500,"quantity":3}],"createdAt":"2022-07-11T18:59:41.583755"}],"pageInfo":{"page":1,"size":5,"totalElements":10,"totalPages":2}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select orderentit0_.order_id as order_id1_3_, orderentit0_.created_at as created_2_3_, orderentit0_.member_id as member_i5_3_, orderentit0_.order_status as order_st3_3_, orderentit0_.updated_at as updated_4_3_ from orders orderentit0_
Hibernate: select memberenti0_.member_id as member_i1_1_, memberenti0_.created_at as created_2_1_, memberenti0_.email as email3_1_, memberenti0_.member_status as member_s4_1_, memberenti0_.name as name5_1_, memberenti0_.phone as phone6_1_, memberenti0_.updated_at as updated_7_1_ from member memberenti0_
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from member where member_id=?
Hibernate: delete from coffee where coffee_id=?
2022-07-11 18:59:41.659  INFO 35302 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5215cd9a testClass = OrderControllerTest, testInstance = com.codestates.srdemoref.order.controller.OrderControllerTest@420d123d, testMethod = getOrders@OrderControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b6964d testClass = OrderControllerTest, locations = '{}', classes = '{class com.codestates.srdemoref.SrDemoRefApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@31198ceb key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={com.codestates.srdemoref.restDocUtils.RestDocsConfig.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b04476e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2783717b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5ed731d0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@747f281], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-07-11 18:59:41.661  INFO 35302 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5215cd9a testClass = OrderControllerTest, testInstance = com.codestates.srdemoref.order.controller.OrderControllerTest@15e86d24, testMethod = patchOrder@OrderControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b6964d testClass = OrderControllerTest, locations = '{}', classes = '{class com.codestates.srdemoref.SrDemoRefApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@31198ceb key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={com.codestates.srdemoref.restDocUtils.RestDocsConfig.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b04476e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2783717b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5ed731d0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@747f281], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75f9a35a]; rollback [true]
2022-07-11 18:59:41.662  INFO 35302 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2022-07-11 18:59:41.662  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-07-11 18:59:41.662  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: insert into coffee (coffee_id, coffee_code, coffee_status, created_at, eng_name, kor_name, price, updated_at) values (default, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into member (member_id, created_at, email, member_status, name, phone, updated_at) values (default, ?, ?, ?, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_ where coffeeenti0_.coffee_id=?

MockHttpServletRequest:
      HTTP Method = PATCH
      Request URI = /orders/12
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"43"]
             Body = {"orderId":12,"orderStatus":"ORDER_CANCEL"}
    Session Attrs = {}

Handler:
             Type = com.codestates.srdemoref.order.controller.OrderController
           Method = com.codestates.srdemoref.order.controller.OrderController#patchOrder(long, OrderPatchDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"data":{"orderId":12,"memberId":3,"orderStatus":"ORDER_CANCEL","orderCoffees":[{"coffeeId":3,"korName":"아메리카노","engName":"Americano","price":2500,"quantity":3}],"createdAt":"2022-07-11T18:59:41.664832"}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: update orders set created_at=?, member_id=?, order_status=?, updated_at=? where order_id=?
Hibernate: select orderentit0_.order_id as order_id1_3_, orderentit0_.created_at as created_2_3_, orderentit0_.member_id as member_i5_3_, orderentit0_.order_status as order_st3_3_, orderentit0_.updated_at as updated_4_3_ from orders orderentit0_
Hibernate: select memberenti0_.member_id as member_i1_1_, memberenti0_.created_at as created_2_1_, memberenti0_.email as email3_1_, memberenti0_.member_status as member_s4_1_, memberenti0_.name as name5_1_, memberenti0_.phone as phone6_1_, memberenti0_.updated_at as updated_7_1_ from member memberenti0_
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from member where member_id=?
Hibernate: delete from coffee where coffee_id=?
2022-07-11 18:59:41.701  INFO 35302 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5215cd9a testClass = OrderControllerTest, testInstance = com.codestates.srdemoref.order.controller.OrderControllerTest@15e86d24, testMethod = patchOrder@OrderControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b6964d testClass = OrderControllerTest, locations = '{}', classes = '{class com.codestates.srdemoref.SrDemoRefApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@31198ceb key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={com.codestates.srdemoref.restDocUtils.RestDocsConfig.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b04476e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2783717b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5ed731d0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@747f281], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-07-11 18:59:41.703  INFO 35302 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5215cd9a testClass = OrderControllerTest, testInstance = com.codestates.srdemoref.order.controller.OrderControllerTest@33cee31a, testMethod = getOrder@OrderControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b6964d testClass = OrderControllerTest, locations = '{}', classes = '{class com.codestates.srdemoref.SrDemoRefApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@31198ceb key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={com.codestates.srdemoref.restDocUtils.RestDocsConfig.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b04476e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2783717b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5ed731d0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@747f281], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75f9a35a]; rollback [true]
2022-07-11 18:59:41.703  INFO 35302 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2022-07-11 18:59:41.703  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-07-11 18:59:41.704  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: insert into coffee (coffee_id, coffee_code, coffee_status, created_at, eng_name, kor_name, price, updated_at) values (default, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into member (member_id, created_at, email, member_status, name, phone, updated_at) values (default, ?, ?, ?, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_ where coffeeenti0_.coffee_id=?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /orders/13
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8"]
             Body = null
    Session Attrs = {}

Handler:
             Type = com.codestates.srdemoref.order.controller.OrderController
           Method = com.codestates.srdemoref.order.controller.OrderController#getOrder(long)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"data":{"orderId":13,"memberId":4,"orderStatus":"ORDER_REQUEST","orderCoffees":[{"coffeeId":4,"korName":"아메리카노3","engName":"Americano","price":2500,"quantity":3}],"createdAt":"2022-07-11T18:59:41.705713"}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select orderentit0_.order_id as order_id1_3_, orderentit0_.created_at as created_2_3_, orderentit0_.member_id as member_i5_3_, orderentit0_.order_status as order_st3_3_, orderentit0_.updated_at as updated_4_3_ from orders orderentit0_
Hibernate: select memberenti0_.member_id as member_i1_1_, memberenti0_.created_at as created_2_1_, memberenti0_.email as email3_1_, memberenti0_.member_status as member_s4_1_, memberenti0_.name as name5_1_, memberenti0_.phone as phone6_1_, memberenti0_.updated_at as updated_7_1_ from member memberenti0_
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from member where member_id=?
Hibernate: delete from coffee where coffee_id=?
2022-07-11 18:59:41.724  INFO 35302 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5215cd9a testClass = OrderControllerTest, testInstance = com.codestates.srdemoref.order.controller.OrderControllerTest@33cee31a, testMethod = getOrder@OrderControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b6964d testClass = OrderControllerTest, locations = '{}', classes = '{class com.codestates.srdemoref.SrDemoRefApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@31198ceb key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={com.codestates.srdemoref.restDocUtils.RestDocsConfig.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b04476e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2783717b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5ed731d0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@747f281], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
2022-07-11 18:59:41.727  INFO 35302 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@5215cd9a testClass = OrderControllerTest, testInstance = com.codestates.srdemoref.order.controller.OrderControllerTest@7c58c10f, testMethod = postOrder@OrderControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b6964d testClass = OrderControllerTest, locations = '{}', classes = '{class com.codestates.srdemoref.SrDemoRefApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@31198ceb key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={com.codestates.srdemoref.restDocUtils.RestDocsConfig.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b04476e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2783717b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5ed731d0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@747f281], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@75f9a35a]; rollback [true]
2022-07-11 18:59:41.728  INFO 35302 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2022-07-11 18:59:41.728  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2022-07-11 18:59:41.728  INFO 35302 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 0 ms
Hibernate: insert into coffee (coffee_id, coffee_code, coffee_status, created_at, eng_name, kor_name, price, updated_at) values (default, ?, ?, ?, ?, ?, ?, ?)
Hibernate: insert into member (member_id, created_at, email, member_status, name, phone, updated_at) values (default, ?, ?, ?, ?, ?, ?)
Hibernate: insert into orders (order_id, created_at, member_id, order_status, updated_at) values (default, ?, ?, ?, ?)
Hibernate: insert into order_coffee (order_coffee_id, coffee_id, order_id, quantity) values (default, ?, ?, ?)
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_ where coffeeenti0_.coffee_id=?

MockHttpServletRequest:
      HTTP Method = POST
      Request URI = /orders
       Parameters = {}
          Headers = [Content-Type:"application/json;charset=UTF-8", Content-Length:"59"]
             Body = {"memberId":5,"orderCoffees":[{"coffeeId":5,"quantity":3}]}
    Session Attrs = {}

Handler:
             Type = com.codestates.srdemoref.order.controller.OrderController
           Method = com.codestates.srdemoref.order.controller.OrderController#postOrder(OrderPostDto)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = null
             View = null
            Model = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 201
    Error message = null
          Headers = [Content-Type:"application/json;charset=UTF-8"]
     Content type = application/json;charset=UTF-8
             Body = {"data":{"orderId":14,"memberId":5,"orderStatus":"ORDER_REQUEST","orderCoffees":[{"coffeeId":5,"korName":"아메리카노1","engName":"Americano","price":2500,"quantity":3}],"createdAt":"2022-07-11T18:59:41.767045"}}
    Forwarded URL = null
   Redirected URL = null
          Cookies = []
Hibernate: select orderentit0_.order_id as order_id1_3_, orderentit0_.created_at as created_2_3_, orderentit0_.member_id as member_i5_3_, orderentit0_.order_status as order_st3_3_, orderentit0_.updated_at as updated_4_3_ from orders orderentit0_
Hibernate: select memberenti0_.member_id as member_i1_1_, memberenti0_.created_at as created_2_1_, memberenti0_.email as email3_1_, memberenti0_.member_status as member_s4_1_, memberenti0_.name as name5_1_, memberenti0_.phone as phone6_1_, memberenti0_.updated_at as updated_7_1_ from member memberenti0_
Hibernate: select coffeeenti0_.coffee_id as coffee_i1_0_, coffeeenti0_.coffee_code as coffee_c2_0_, coffeeenti0_.coffee_status as coffee_s3_0_, coffeeenti0_.created_at as created_4_0_, coffeeenti0_.eng_name as eng_name5_0_, coffeeenti0_.kor_name as kor_name6_0_, coffeeenti0_.price as price7_0_, coffeeenti0_.updated_at as updated_8_0_ from coffee coffeeenti0_
Hibernate: delete from order_coffee where order_coffee_id=?
Hibernate: delete from orders where order_id=?
Hibernate: delete from member where member_id=?
Hibernate: delete from coffee where coffee_id=?
2022-07-11 18:59:41.785  INFO 35302 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test: [DefaultTestContext@5215cd9a testClass = OrderControllerTest, testInstance = com.codestates.srdemoref.order.controller.OrderControllerTest@7c58c10f, testMethod = postOrder@OrderControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@36b6964d testClass = OrderControllerTest, locations = '{}', classes = '{class com.codestates.srdemoref.SrDemoRefApplication}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7446d8d5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@63da79bb, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6b9ce1bf, [ImportsContextCustomizer@31198ceb key = [@org.springframework.test.context.BootstrapWith(value=org.springframework.boot.test.context.SpringBootTestContextBootstrapper.class), @org.springframework.context.annotation.Import(value={org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector.class}), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value={}, exclude={}, classes={}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.restdocs", skip=NO), @org.springframework.boot.test.context.SpringBootTest(args={}, webEnvironment=MOCK, value={}, properties={}, classes={}), @org.springframework.boot.test.autoconfigure.restdocs.AutoConfigureRestDocs(uriScheme="http", outputDir="", uriPort=8080, value="", uriHost="localhost"), @org.springframework.context.annotation.Import(value={com.codestates.srdemoref.restDocUtils.RestDocsConfig.class}), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName={}, readOnly=false, isolation=DEFAULT, transactionManager="", timeoutString="", label={}, noRollbackFor={}, noRollbackForClassName={}, value="", timeout=-1, rollbackFor={}), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.context.annotation.Import(value={org.springframework.boot.test.autoconfigure.restdocs.RestDocumentationContextProviderRegistrar.class}), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value="spring.test.mockmvc", skip=NO)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5b04476e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2783717b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5ed731d0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@747f281], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
